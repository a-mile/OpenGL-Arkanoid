#version 330 core

in vec4 ourColor;
in vec4 vN; 
in vec4 vV; 
in vec4 vL; 
in vec2 iTexCoord0;

out vec4 color;

uniform sampler2D textureMap0; 
uniform sampler2D textureMap1;
  
void main()
{
    vec4 mN=normalize(vN); //normalizuj interpolowany wektor normalny w przestrzeni oka
	vec4 mL=normalize(vL); //normalizuj interpolowany wektor do obserwatora w przestrzeni oka
	vec4 mV=normalize(vV); //normalizuj interpolowany wektor do zrodla swiatla w przestrzeni oka
	vec4 mR=reflect(-mL,mN); //oblicz wektor odbity w przestrzeni oka

    //vec4 Md = ourColor;
    //vec4 Ms = ourColor;
	vec4 Md=texture(textureMap0,iTexCoord0);
	vec4 Ms=texture(textureMap1,iTexCoord0);
    vec4 Ma=vec4(0,0,0,1); //Kolor materialu dla swiatla otoczenia
	vec4 La=vec4(0,0,0,1); //Kolor swiatla otoczenia	
	vec4 Ld=vec4(1,1,1,1); //Kolor swiatla rozpraszanego	
	vec4 Ls=vec4(1,1,1,1); //Kolor swiatla odbijanego
	float shininess=50; 

	float nl=max(0,dot(mN,mL)); 
	float rv=pow(max(0,dot(mN,mL)),shininess); 

	color=Ma*La+Md*Ld*nl+Ms*Ls*rv;     
}